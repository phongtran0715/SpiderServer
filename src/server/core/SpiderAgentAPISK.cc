// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.

#include "SpiderAgentAPI.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_2;



void
SpiderCorba::SpiderDefine::VideoInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(videoId,0);
  _n.marshalWString(title,0);
  _n.marshalWString(tags,0);
  _n.marshalWString(description,0);
  _n.marshalWString(thumbnail,0);
  _n.marshalWString(vDownloadPath,0);
  _n.marshalWString(vRenderPath,0);
  mappingId >>= _n;
  processStatus >>= _n;
  license >>= _n;

}

void
SpiderCorba::SpiderDefine::VideoInfo::operator<<= (cdrStream &_n)
{
  videoId = _n.unmarshalWString(0);
  title = _n.unmarshalWString(0);
  tags = _n.unmarshalWString(0);
  description = _n.unmarshalWString(0);
  thumbnail = _n.unmarshalWString(0);
  vDownloadPath = _n.unmarshalWString(0);
  vRenderPath = _n.unmarshalWString(0);
  (::CORBA::Long&)mappingId <<= _n;
  (::CORBA::Long&)processStatus <<= _n;
  (::CORBA::Long&)license <<= _n;

}

void
SpiderCorba::SpiderDefine::DownloadConfig::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(cHomeId,0);
  _n.marshalWString(monitorContent,0);
  mappingType >>= _n;

}

void
SpiderCorba::SpiderDefine::DownloadConfig::operator<<= (cdrStream &_n)
{
  cHomeId = _n.unmarshalWString(0);
  monitorContent = _n.unmarshalWString(0);
  (::CORBA::Long&)mappingType <<= _n;

}

void
SpiderCorba::SpiderDefine::RenderConfig::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(renderCommand,0);

}

void
SpiderCorba::SpiderDefine::RenderConfig::operator<<= (cdrStream &_n)
{
  renderCommand = _n.unmarshalWString(0);

}

void
SpiderCorba::SpiderDefine::CustomVideoInfor::operator>>= (cdrStream &_n) const
{
  id >>= _n;
  _n.marshalWString(videoId,0);

}

void
SpiderCorba::SpiderDefine::CustomVideoInfor::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)id <<= _n;
  videoId = _n.unmarshalWString(0);

}

void
SpiderCorba::SpiderDefine::UploadConfig::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(vTitleTemp,0);
  _n.marshalWString(vDescTemp,0);
  _n.marshalWString(vTagsTemp,0);
  _n.marshalBoolean(enableTitle);
  _n.marshalBoolean(enableDes);
  _n.marshalBoolean(enableTags);

}

void
SpiderCorba::SpiderDefine::UploadConfig::operator<<= (cdrStream &_n)
{
  vTitleTemp = _n.unmarshalWString(0);
  vDescTemp = _n.unmarshalWString(0);
  vTagsTemp = _n.unmarshalWString(0);
  enableTitle = _n.unmarshalBoolean();
  enableDes = _n.unmarshalBoolean();
  enableTags = _n.unmarshalBoolean();

}

void
SpiderCorba::SpiderDefine::AuthenInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(userName,0);
  _n.marshalWString(apiKey,0);
  _n.marshalWString(clientSecret,0);
  _n.marshalWString(clientId,0);

}

void
SpiderCorba::SpiderDefine::AuthenInfo::operator<<= (cdrStream &_n)
{
  userName = _n.unmarshalWString(0);
  apiKey = _n.unmarshalWString(0);
  clientSecret = _n.unmarshalWString(0);
  clientId = _n.unmarshalWString(0);

}

void
SpiderCorba::SpiderDefine::ClusterInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(clusterIp,0);
  _n.marshalWString(userName,0);
  _n.marshalWString(password,0);

}

void
SpiderCorba::SpiderDefine::ClusterInfo::operator<<= (cdrStream &_n)
{
  clusterIp = _n.unmarshalWString(0);
  userName = _n.unmarshalWString(0);
  password = _n.unmarshalWString(0);

}

void
SpiderCorba::SpiderDefine::ChannelInfo::operator>>= (cdrStream &_n) const
{
  _n.marshalWString(channelId,0);
  _n.marshalWString(channelName,0);
  videoNumber >>= _n;
  viewNumber >>= _n;
  subcriber >>= _n;
  dateCreated >>= _n;
  status >>= _n;

}

void
SpiderCorba::SpiderDefine::ChannelInfo::operator<<= (cdrStream &_n)
{
  channelId = _n.unmarshalWString(0);
  channelName = _n.unmarshalWString(0);
  (::CORBA::Long&)videoNumber <<= _n;
  (::CORBA::Long&)viewNumber <<= _n;
  (::CORBA::Long&)subcriber <<= _n;
  (::CORBA::Long&)dateCreated <<= _n;
  (::CORBA::Long&)status <<= _n;

}

SpiderCorba::SpiderDefine_ptr SpiderCorba::SpiderDefine_Helper::_nil() {
  return ::SpiderCorba::SpiderDefine::_nil();
}

::CORBA::Boolean SpiderCorba::SpiderDefine_Helper::is_nil(::SpiderCorba::SpiderDefine_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::SpiderDefine_Helper::release(::SpiderCorba::SpiderDefine_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::SpiderDefine_Helper::marshalObjRef(::SpiderCorba::SpiderDefine_ptr obj, cdrStream& s) {
  ::SpiderCorba::SpiderDefine::_marshalObjRef(obj, s);
}

SpiderCorba::SpiderDefine_ptr SpiderCorba::SpiderDefine_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::SpiderDefine::_unmarshalObjRef(s);
}

void SpiderCorba::SpiderDefine_Helper::duplicate(::SpiderCorba::SpiderDefine_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_duplicate(::SpiderCorba::SpiderDefine_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::SpiderDefine_ptr
SpiderCorba::SpiderDefine::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_SpiderDefine _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_SpiderDefine* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_SpiderDefine;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::SpiderDefine::_PD_repoId = "IDL:SpiderCorba/SpiderDefine:1.0";


SpiderCorba::_objref_SpiderDefine::~_objref_SpiderDefine() {
  
}


SpiderCorba::_objref_SpiderDefine::_objref_SpiderDefine(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::SpiderDefine::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_SpiderDefine::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}

SpiderCorba::_pof_SpiderDefine::~_pof_SpiderDefine() {}


omniObjRef*
SpiderCorba::_pof_SpiderDefine::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_SpiderDefine(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_SpiderDefine::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;
  
  return 0;
}

const SpiderCorba::_pof_SpiderDefine _the_pof_SpiderCorba_mSpiderDefine;

SpiderCorba::_impl_SpiderDefine::~_impl_SpiderDefine() {}


::CORBA::Boolean
SpiderCorba::_impl_SpiderDefine::_dispatch(omniCallHandle& _handle)
{
  

  
  return 0;
}

void*
SpiderCorba::_impl_SpiderDefine::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;
  
  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;
  
  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_SpiderDefine::_mostDerivedRepoId()
{
  return ::SpiderCorba::SpiderDefine::_PD_repoId;
}

SpiderCorba::SpiderBootSide_ptr SpiderCorba::SpiderBootSide_Helper::_nil() {
  return ::SpiderCorba::SpiderBootSide::_nil();
}

::CORBA::Boolean SpiderCorba::SpiderBootSide_Helper::is_nil(::SpiderCorba::SpiderBootSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::SpiderBootSide_Helper::release(::SpiderCorba::SpiderBootSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::SpiderBootSide_Helper::marshalObjRef(::SpiderCorba::SpiderBootSide_ptr obj, cdrStream& s) {
  ::SpiderCorba::SpiderBootSide::_marshalObjRef(obj, s);
}

SpiderCorba::SpiderBootSide_ptr SpiderCorba::SpiderBootSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::SpiderBootSide::_unmarshalObjRef(s);
}

void SpiderCorba::SpiderBootSide_Helper::duplicate(::SpiderCorba::SpiderBootSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::SpiderBootSide_ptr
SpiderCorba::SpiderBootSide::_duplicate(::SpiderCorba::SpiderBootSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::SpiderBootSide_ptr
SpiderCorba::SpiderBootSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::SpiderBootSide_ptr
SpiderCorba::SpiderBootSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::SpiderBootSide_ptr
SpiderCorba::SpiderBootSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_SpiderBootSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_SpiderBootSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_SpiderBootSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::SpiderBootSide::_PD_repoId = "IDL:SpiderCorba/SpiderBootSide:1.0";


SpiderCorba::_objref_SpiderBootSide::~_objref_SpiderBootSide() {
  
}


SpiderCorba::_objref_SpiderBootSide::_objref_SpiderBootSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::SpiderBootSide::_PD_repoId, ior, id, 1),
   _objref_SpiderDefine(ior, id)
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_SpiderBootSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::SpiderBootSide::_PD_repoId)
    return (::SpiderCorba::SpiderBootSide_ptr) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::SpiderBootSide::_PD_repoId))
    return (::SpiderCorba::SpiderBootSide_ptr) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderCorba::SpiderBootSide::createDownloadTimer

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_clong
class _0RL_cd_de358bdde5ac924d_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_00000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::Long arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_de358bdde5ac924d_00000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_00000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_de358bdde5ac924d_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_de358bdde5ac924d_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_00000000* tcd = (_0RL_cd_de358bdde5ac924d_00000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->createDownloadTimer(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::createDownloadTimer(::CORBA::Long timerId, ::CORBA::Long timerInterval)
{
  _0RL_cd_de358bdde5ac924d_00000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_10000000, "createDownloadTimer", 20);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = timerInterval;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::modifyDownloadTimer

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_clong_i_clong
class _0RL_cd_de358bdde5ac924d_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_20000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::Long arg_1;
  ::CORBA::Long arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_de358bdde5ac924d_20000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_20000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;
  (::CORBA::Long&)arg_2 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_20000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_de358bdde5ac924d_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_de358bdde5ac924d_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_20000000* tcd = (_0RL_cd_de358bdde5ac924d_20000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->modifyDownloadTimer(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::modifyDownloadTimer(::CORBA::Long timerId, ::CORBA::Long timerInterval, ::CORBA::Long syncStatus)
{
  _0RL_cd_de358bdde5ac924d_20000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_30000000, "modifyDownloadTimer", 20);
  _call_desc.arg_0 = timerId;
  _call_desc.arg_1 = timerInterval;
  _call_desc.arg_2 = syncStatus;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::deleteDowloadTimer

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong
class _0RL_cd_de358bdde5ac924d_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_40000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_de358bdde5ac924d_40000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_40000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_de358bdde5ac924d_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_de358bdde5ac924d_40000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_40000000* tcd = (_0RL_cd_de358bdde5ac924d_40000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->deleteDowloadTimer(tcd->arg_0);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::deleteDowloadTimer(::CORBA::Long timerId)
{
  _0RL_cd_de358bdde5ac924d_40000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_50000000, "deleteDowloadTimer", 19);
  _call_desc.arg_0 = timerId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::deleteDownloadedVideo

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_40000000* tcd = (_0RL_cd_de358bdde5ac924d_40000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->deleteDownloadedVideo(tcd->arg_0);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::deleteDownloadedVideo(::CORBA::Long jobId)
{
  _0RL_cd_de358bdde5ac924d_40000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_60000000, "deleteDownloadedVideo", 22);
  _call_desc.arg_0 = jobId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::createRenderJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cSpiderCorba_mSpiderDefine_mVideoInfo
class _0RL_cd_de358bdde5ac924d_70000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_70000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::VideoInfo_var arg_1_;
  const SpiderCorba::SpiderDefine::VideoInfo* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_de358bdde5ac924d_70000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const SpiderCorba::SpiderDefine::VideoInfo&) *arg_1 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_70000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = new SpiderCorba::SpiderDefine::VideoInfo;
  (SpiderCorba::SpiderDefine::VideoInfo&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

void _0RL_cd_de358bdde5ac924d_70000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_de358bdde5ac924d_70000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_de358bdde5ac924d_70000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_70000000* tcd = (_0RL_cd_de358bdde5ac924d_70000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->createRenderJob(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::createRenderJob(::CORBA::Long jobId, const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo)
{
  _0RL_cd_de358bdde5ac924d_70000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_80000000, "createRenderJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::deleteRenderJob

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_40000000* tcd = (_0RL_cd_de358bdde5ac924d_40000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->deleteRenderJob(tcd->arg_0);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::deleteRenderJob(::CORBA::Long jobId)
{
  _0RL_cd_de358bdde5ac924d_40000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_90000000, "deleteRenderJob", 16);
  _call_desc.arg_0 = jobId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::deleteRenderdVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_cwstring
class _0RL_cd_de358bdde5ac924d_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_a0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::WString_var arg_0_;
  const ::CORBA::WChar* arg_0;
};

void _0RL_cd_de358bdde5ac924d_a0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalWString(arg_0,0);

}

void _0RL_cd_de358bdde5ac924d_a0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalWString(0);
  arg_0 = arg_0_.in();

}

const char* const _0RL_cd_de358bdde5ac924d_a0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_a0000000* tcd = (_0RL_cd_de358bdde5ac924d_a0000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  impl->deleteRenderdVideo(tcd->arg_0);


}

void SpiderCorba::_objref_SpiderBootSide::deleteRenderdVideo(const ::CORBA::WChar* vLocation)
{
  _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_b0000000, "deleteRenderdVideo", 19);
  _call_desc.arg_0 = vLocation;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::SpiderBootSide::createUploadTimer

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cwstring
class _0RL_cd_de358bdde5ac924d_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_c0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::WString_var arg_0_;
  const ::CORBA::WChar* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_de358bdde5ac924d_c0000000::marshalArguments(cdrStream& _n)
{
  _n.marshalWString(arg_0,0);

}

void _0RL_cd_de358bdde5ac924d_c0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalWString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_de358bdde5ac924d_c0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_de358bdde5ac924d_c0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_de358bdde5ac924d_c0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_c0000000* tcd = (_0RL_cd_de358bdde5ac924d_c0000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->createUploadTimer(tcd->arg_0);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::createUploadTimer(const ::CORBA::WChar* cHomeId)
{
  _0RL_cd_de358bdde5ac924d_c0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_d0000000, "createUploadTimer", 18);
  _call_desc.arg_0 = cHomeId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::deleteUploadTimer

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_c0000000* tcd = (_0RL_cd_de358bdde5ac924d_c0000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->deleteUploadTimer(tcd->arg_0);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::deleteUploadTimer(const ::CORBA::WChar* cHomeId)
{
  _0RL_cd_de358bdde5ac924d_c0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_e0000000, "deleteUploadTimer", 18);
  _call_desc.arg_0 = cHomeId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::createUploadJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cSpiderCorba_mSpiderDefine_mVideoInfo_i_cwstring
class _0RL_cd_de358bdde5ac924d_f0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_f0000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::VideoInfo_var arg_1_;
  const SpiderCorba::SpiderDefine::VideoInfo* arg_1;
  ::CORBA::WString_var arg_2_;
  const ::CORBA::WChar* arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_de358bdde5ac924d_f0000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const SpiderCorba::SpiderDefine::VideoInfo&) *arg_1 >>= _n;
  _n.marshalWString(arg_2,0);

}

void _0RL_cd_de358bdde5ac924d_f0000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = new SpiderCorba::SpiderDefine::VideoInfo;
  (SpiderCorba::SpiderDefine::VideoInfo&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();
  arg_2_ = _n.unmarshalWString(0);
  arg_2 = arg_2_.in();

}

void _0RL_cd_de358bdde5ac924d_f0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_de358bdde5ac924d_f0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_de358bdde5ac924d_f0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_f0000000* tcd = (_0RL_cd_de358bdde5ac924d_f0000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->createUploadJob(tcd->arg_0, *tcd->arg_1, tcd->arg_2);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::createUploadJob(::CORBA::Long jobId, const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo, const ::CORBA::WChar* cHomeId)
{
  _0RL_cd_de358bdde5ac924d_f0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_01000000, "createUploadJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;
  _call_desc.arg_2 = cHomeId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::SpiderBootSide::deleteUploadJob

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_clong_i_cwstring
class _0RL_cd_de358bdde5ac924d_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_11000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::WString_var arg_1_;
  const ::CORBA::WChar* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_de358bdde5ac924d_11000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  _n.marshalWString(arg_1,0);

}

void _0RL_cd_de358bdde5ac924d_11000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = _n.unmarshalWString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_de358bdde5ac924d_11000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_de358bdde5ac924d_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_de358bdde5ac924d_11000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_11000000* tcd = (_0RL_cd_de358bdde5ac924d_11000000*)cd;
  SpiderCorba::_impl_SpiderBootSide* impl = (SpiderCorba::_impl_SpiderBootSide*) svnt->_ptrToInterface(SpiderCorba::SpiderBootSide::_PD_repoId);
  tcd->result = impl->deleteUploadJob(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean SpiderCorba::_objref_SpiderBootSide::deleteUploadJob(::CORBA::Long jobId, const ::CORBA::WChar* cHomeId)
{
  _0RL_cd_de358bdde5ac924d_11000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_21000000, "deleteUploadJob", 16);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = cHomeId;

  _invoke(_call_desc);
  return _call_desc.result;


}

SpiderCorba::_pof_SpiderBootSide::~_pof_SpiderBootSide() {}


omniObjRef*
SpiderCorba::_pof_SpiderBootSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_SpiderBootSide(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_SpiderBootSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::SpiderBootSide::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;


  return 0;
}

const SpiderCorba::_pof_SpiderBootSide _the_pof_SpiderCorba_mSpiderBootSide;

SpiderCorba::_impl_SpiderBootSide::~_impl_SpiderBootSide() {}


::CORBA::Boolean
SpiderCorba::_impl_SpiderBootSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "createDownloadTimer")) {

    _0RL_cd_de358bdde5ac924d_00000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_10000000, "createDownloadTimer", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "modifyDownloadTimer")) {

    _0RL_cd_de358bdde5ac924d_20000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_30000000, "modifyDownloadTimer", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteDowloadTimer")) {

    _0RL_cd_de358bdde5ac924d_40000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_50000000, "deleteDowloadTimer", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteDownloadedVideo")) {

    _0RL_cd_de358bdde5ac924d_40000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_60000000, "deleteDownloadedVideo", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "createRenderJob")) {

    _0RL_cd_de358bdde5ac924d_70000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_80000000, "createRenderJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteRenderJob")) {

    _0RL_cd_de358bdde5ac924d_40000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_90000000, "deleteRenderJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteRenderdVideo")) {

    _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_b0000000, "deleteRenderdVideo", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "createUploadTimer")) {

    _0RL_cd_de358bdde5ac924d_c0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_d0000000, "createUploadTimer", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteUploadTimer")) {

    _0RL_cd_de358bdde5ac924d_c0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_e0000000, "deleteUploadTimer", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "createUploadJob")) {

    _0RL_cd_de358bdde5ac924d_f0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_01000000, "createUploadJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "deleteUploadJob")) {

    _0RL_cd_de358bdde5ac924d_11000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_21000000, "deleteUploadJob", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_SpiderDefine*)this)->
      _impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
SpiderCorba::_impl_SpiderBootSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::SpiderBootSide::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderBootSide*) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::SpiderBootSide::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderBootSide*) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_SpiderBootSide::_mostDerivedRepoId()
{
  return ::SpiderCorba::SpiderBootSide::_PD_repoId;
}

SpiderCorba::AgentSide_ptr SpiderCorba::AgentSide_Helper::_nil() {
  return ::SpiderCorba::AgentSide::_nil();
}

::CORBA::Boolean SpiderCorba::AgentSide_Helper::is_nil(::SpiderCorba::AgentSide_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::AgentSide_Helper::release(::SpiderCorba::AgentSide_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::AgentSide_Helper::marshalObjRef(::SpiderCorba::AgentSide_ptr obj, cdrStream& s) {
  ::SpiderCorba::AgentSide::_marshalObjRef(obj, s);
}

SpiderCorba::AgentSide_ptr SpiderCorba::AgentSide_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::AgentSide::_unmarshalObjRef(s);
}

void SpiderCorba::AgentSide_Helper::duplicate(::SpiderCorba::AgentSide_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_duplicate(::SpiderCorba::AgentSide_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::AgentSide_ptr
SpiderCorba::AgentSide::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_AgentSide _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_AgentSide* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_AgentSide;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::AgentSide::_PD_repoId = "IDL:SpiderCorba/AgentSide:1.0";


SpiderCorba::_objref_AgentSide::~_objref_AgentSide() {
  
}


SpiderCorba::_objref_AgentSide::_objref_AgentSide(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::AgentSide::_PD_repoId, ior, id, 1),
   _objref_SpiderDefine(ior, id)
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_AgentSide::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::AgentSide::_PD_repoId)
    return (::SpiderCorba::AgentSide_ptr) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::AgentSide::_PD_repoId))
    return (::SpiderCorba::AgentSide_ptr) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderCorba::AgentSide::onDownloadStartup

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_31000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_a0000000* tcd = (_0RL_cd_de358bdde5ac924d_a0000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->onDownloadStartup(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::onDownloadStartup(const ::CORBA::WChar* downloadClusterId)
{
  _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_31000000, "onDownloadStartup", 18);
  _call_desc.arg_0 = downloadClusterId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::getLastSyncTime

// Proxy call descriptor class. Mangled signature:
//  _clonglong_i_clong
class _0RL_cd_de358bdde5ac924d_41000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_41000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::LongLong result;
};

void _0RL_cd_de358bdde5ac924d_41000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_41000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_41000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_de358bdde5ac924d_41000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::LongLong&)result <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_41000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_51000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_41000000* tcd = (_0RL_cd_de358bdde5ac924d_41000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getLastSyncTime(tcd->arg_0);


}

::CORBA::LongLong SpiderCorba::_objref_AgentSide::getLastSyncTime(::CORBA::Long mappingId)
{
  _0RL_cd_de358bdde5ac924d_41000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_51000000, "getLastSyncTime", 16);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result;


}


//
// Code for SpiderCorba::AgentSide::updateLastSyntime

// Proxy call descriptor class. Mangled signature:
//  void_i_clong_i_clonglong
class _0RL_cd_de358bdde5ac924d_61000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_61000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::LongLong arg_1;
};

void _0RL_cd_de358bdde5ac924d_61000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_61000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::LongLong&)arg_1 <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_61000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_71000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_61000000* tcd = (_0RL_cd_de358bdde5ac924d_61000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateLastSyntime(tcd->arg_0, tcd->arg_1);


}

void SpiderCorba::_objref_AgentSide::updateLastSyntime(::CORBA::Long mappingId, ::CORBA::LongLong lastSyncTime)
{
  _0RL_cd_de358bdde5ac924d_61000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_71000000, "updateLastSyntime", 18);
  _call_desc.arg_0 = mappingId;
  _call_desc.arg_1 = lastSyncTime;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::insertDownloadedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_cSpiderCorba_mSpiderDefine_mVideoInfo
class _0RL_cd_de358bdde5ac924d_81000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_81000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  SpiderCorba::SpiderDefine::VideoInfo_var arg_0_;
  const SpiderCorba::SpiderDefine::VideoInfo* arg_0;
};

void _0RL_cd_de358bdde5ac924d_81000000::marshalArguments(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::VideoInfo&) *arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_81000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new SpiderCorba::SpiderDefine::VideoInfo;
  (SpiderCorba::SpiderDefine::VideoInfo&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

const char* const _0RL_cd_de358bdde5ac924d_81000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_91000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_81000000* tcd = (_0RL_cd_de358bdde5ac924d_81000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->insertDownloadedVideo(*tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::insertDownloadedVideo(const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo)
{
  _0RL_cd_de358bdde5ac924d_81000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_91000000, "insertDownloadedVideo", 22);
  _call_desc.arg_0 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::updateDownloadedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_clong_i_cSpiderCorba_mSpiderDefine_mVideoInfo
class _0RL_cd_de358bdde5ac924d_a1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_a1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::VideoInfo_var arg_1_;
  const SpiderCorba::SpiderDefine::VideoInfo* arg_1;
};

void _0RL_cd_de358bdde5ac924d_a1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const SpiderCorba::SpiderDefine::VideoInfo&) *arg_1 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_a1000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  arg_1_ = new SpiderCorba::SpiderDefine::VideoInfo;
  (SpiderCorba::SpiderDefine::VideoInfo&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

const char* const _0RL_cd_de358bdde5ac924d_a1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_b1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_a1000000* tcd = (_0RL_cd_de358bdde5ac924d_a1000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateDownloadedVideo(tcd->arg_0, *tcd->arg_1);


}

void SpiderCorba::_objref_AgentSide::updateDownloadedVideo(::CORBA::Long jobId, const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo)
{
  _0RL_cd_de358bdde5ac924d_a1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_b1000000, "updateDownloadedVideo", 22);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::getDownloadConfig

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mSpiderDefine_mDownloadConfig_i_clong
class _0RL_cd_de358bdde5ac924d_c1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_c1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::DownloadConfig_var result;
};

void _0RL_cd_de358bdde5ac924d_c1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_c1000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_c1000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::DownloadConfig&) result >>= _n;

}

void _0RL_cd_de358bdde5ac924d_c1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::SpiderDefine::DownloadConfig;
  (SpiderCorba::SpiderDefine::DownloadConfig&)result <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_c1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_d1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_c1000000* tcd = (_0RL_cd_de358bdde5ac924d_c1000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getDownloadConfig(tcd->arg_0);


}

SpiderCorba::SpiderDefine::DownloadConfig* SpiderCorba::_objref_AgentSide::getDownloadConfig(::CORBA::Long mappingId)
{
  _0RL_cd_de358bdde5ac924d_c1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_d1000000, "getDownloadConfig", 18);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for SpiderCorba::AgentSide::getCustomVideo

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mSpiderDefine_mCustomVideoInfor_i_cwstring_i_clong
class _0RL_cd_de358bdde5ac924d_e1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_e1000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::WString_var arg_0_;
  const ::CORBA::WChar* arg_0;
  ::CORBA::Long arg_1;
  SpiderCorba::SpiderDefine::CustomVideoInfor_var result;
};

void _0RL_cd_de358bdde5ac924d_e1000000::marshalArguments(cdrStream& _n)
{
  _n.marshalWString(arg_0,0);
  arg_1 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_e1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalWString(0);
  arg_0 = arg_0_.in();
  (::CORBA::Long&)arg_1 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_e1000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::CustomVideoInfor&) result >>= _n;

}

void _0RL_cd_de358bdde5ac924d_e1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::SpiderDefine::CustomVideoInfor;
  (SpiderCorba::SpiderDefine::CustomVideoInfor&)result <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_e1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_f1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_e1000000* tcd = (_0RL_cd_de358bdde5ac924d_e1000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getCustomVideo(tcd->arg_0, tcd->arg_1);


}

SpiderCorba::SpiderDefine::CustomVideoInfor* SpiderCorba::_objref_AgentSide::getCustomVideo(const ::CORBA::WChar* downloadClusterId, ::CORBA::Long timerId)
{
  _0RL_cd_de358bdde5ac924d_e1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_f1000000, "getCustomVideo", 15);
  _call_desc.arg_0 = downloadClusterId;
  _call_desc.arg_1 = timerId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for SpiderCorba::AgentSide::onRenderStartup

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_a0000000* tcd = (_0RL_cd_de358bdde5ac924d_a0000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->onRenderStartup(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::onRenderStartup(const ::CORBA::WChar* renderClusterId)
{
  _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_02000000, "onRenderStartup", 16);
  _call_desc.arg_0 = renderClusterId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::getRenderConfig

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mSpiderDefine_mRenderConfig_i_clong
class _0RL_cd_de358bdde5ac924d_12000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_12000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::RenderConfig_var result;
};

void _0RL_cd_de358bdde5ac924d_12000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_12000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_12000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::RenderConfig&) result >>= _n;

}

void _0RL_cd_de358bdde5ac924d_12000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::SpiderDefine::RenderConfig;
  (SpiderCorba::SpiderDefine::RenderConfig&)result <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_12000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_12000000* tcd = (_0RL_cd_de358bdde5ac924d_12000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getRenderConfig(tcd->arg_0);


}

SpiderCorba::SpiderDefine::RenderConfig* SpiderCorba::_objref_AgentSide::getRenderConfig(::CORBA::Long mappingId)
{
  _0RL_cd_de358bdde5ac924d_12000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_22000000, "getRenderConfig", 16);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for SpiderCorba::AgentSide::updateRenderedVideo

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_32000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_a1000000* tcd = (_0RL_cd_de358bdde5ac924d_a1000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateRenderedVideo(tcd->arg_0, *tcd->arg_1);


}

void SpiderCorba::_objref_AgentSide::updateRenderedVideo(::CORBA::Long jobId, const ::SpiderCorba::SpiderDefine::VideoInfo& vInfo)
{
  _0RL_cd_de358bdde5ac924d_a1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_32000000, "updateRenderedVideo", 20);
  _call_desc.arg_0 = jobId;
  _call_desc.arg_1 = &(::SpiderCorba::SpiderDefine::VideoInfo&) vInfo;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::onUploadStartup

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_a0000000* tcd = (_0RL_cd_de358bdde5ac924d_a0000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->onUploadStartup(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::onUploadStartup(const ::CORBA::WChar* uploadClusterId)
{
  _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_42000000, "onUploadStartup", 16);
  _call_desc.arg_0 = uploadClusterId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::getUploadConfig

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mSpiderDefine_mUploadConfig_i_clong
class _0RL_cd_de358bdde5ac924d_52000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_52000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::UploadConfig_var result;
};

void _0RL_cd_de358bdde5ac924d_52000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_52000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_52000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::UploadConfig&) result >>= _n;

}

void _0RL_cd_de358bdde5ac924d_52000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::SpiderDefine::UploadConfig;
  (SpiderCorba::SpiderDefine::UploadConfig&)result <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_52000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_62000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_52000000* tcd = (_0RL_cd_de358bdde5ac924d_52000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getUploadConfig(tcd->arg_0);


}

SpiderCorba::SpiderDefine::UploadConfig* SpiderCorba::_objref_AgentSide::getUploadConfig(::CORBA::Long mappingId)
{
  _0RL_cd_de358bdde5ac924d_52000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_62000000, "getUploadConfig", 16);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for SpiderCorba::AgentSide::updateUploadedVideo

// Proxy call descriptor class. Mangled signature:
//  void_i_clong
class _0RL_cd_de358bdde5ac924d_72000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_72000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
};

void _0RL_cd_de358bdde5ac924d_72000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_72000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_72000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_82000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_72000000* tcd = (_0RL_cd_de358bdde5ac924d_72000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  impl->updateUploadedVideo(tcd->arg_0);


}

void SpiderCorba::_objref_AgentSide::updateUploadedVideo(::CORBA::Long jobId)
{
  _0RL_cd_de358bdde5ac924d_72000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_82000000, "updateUploadedVideo", 20);
  _call_desc.arg_0 = jobId;

  _invoke(_call_desc);



}


//
// Code for SpiderCorba::AgentSide::getAuthenInfo

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mSpiderDefine_mAuthenInfo_i_clong
class _0RL_cd_de358bdde5ac924d_92000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_92000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  SpiderCorba::SpiderDefine::AuthenInfo_var result;
};

void _0RL_cd_de358bdde5ac924d_92000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_92000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_92000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::AuthenInfo&) result >>= _n;

}

void _0RL_cd_de358bdde5ac924d_92000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::SpiderDefine::AuthenInfo;
  (SpiderCorba::SpiderDefine::AuthenInfo&)result <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_92000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_a2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_92000000* tcd = (_0RL_cd_de358bdde5ac924d_92000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getAuthenInfo(tcd->arg_0);


}

SpiderCorba::SpiderDefine::AuthenInfo* SpiderCorba::_objref_AgentSide::getAuthenInfo(::CORBA::Long mappingId)
{
  _0RL_cd_de358bdde5ac924d_92000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_a2000000, "getAuthenInfo", 14);
  _call_desc.arg_0 = mappingId;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}


//
// Code for SpiderCorba::AgentSide::getClusterInfo

// Proxy call descriptor class. Mangled signature:
//  _cSpiderCorba_mSpiderDefine_mClusterInfo_i_clong_i_clong
class _0RL_cd_de358bdde5ac924d_b2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_b2000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long arg_0;
  ::CORBA::Long arg_1;
  SpiderCorba::SpiderDefine::ClusterInfo_var result;
};

void _0RL_cd_de358bdde5ac924d_b2000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_b2000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;
  (::CORBA::Long&)arg_1 <<= _n;

}

void _0RL_cd_de358bdde5ac924d_b2000000::marshalReturnedValues(cdrStream& _n)
{
  (const SpiderCorba::SpiderDefine::ClusterInfo&) result >>= _n;

}

void _0RL_cd_de358bdde5ac924d_b2000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new SpiderCorba::SpiderDefine::ClusterInfo;
  (SpiderCorba::SpiderDefine::ClusterInfo&)result <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_b2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_c2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_b2000000* tcd = (_0RL_cd_de358bdde5ac924d_b2000000*)cd;
  SpiderCorba::_impl_AgentSide* impl = (SpiderCorba::_impl_AgentSide*) svnt->_ptrToInterface(SpiderCorba::AgentSide::_PD_repoId);
  tcd->result = impl->getClusterInfo(tcd->arg_0, tcd->arg_1);


}

SpiderCorba::SpiderDefine::ClusterInfo* SpiderCorba::_objref_AgentSide::getClusterInfo(::CORBA::Long mappingId, ::CORBA::Long clusterType)
{
  _0RL_cd_de358bdde5ac924d_b2000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_c2000000, "getClusterInfo", 15);
  _call_desc.arg_0 = mappingId;
  _call_desc.arg_1 = clusterType;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}

SpiderCorba::_pof_AgentSide::~_pof_AgentSide() {}


omniObjRef*
SpiderCorba::_pof_AgentSide::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_AgentSide(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_AgentSide::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::AgentSide::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;


  return 0;
}

const SpiderCorba::_pof_AgentSide _the_pof_SpiderCorba_mAgentSide;

SpiderCorba::_impl_AgentSide::~_impl_AgentSide() {}


::CORBA::Boolean
SpiderCorba::_impl_AgentSide::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "onDownloadStartup")) {

    _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_31000000, "onDownloadStartup", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getLastSyncTime")) {

    _0RL_cd_de358bdde5ac924d_41000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_51000000, "getLastSyncTime", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateLastSyntime")) {

    _0RL_cd_de358bdde5ac924d_61000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_71000000, "updateLastSyntime", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "insertDownloadedVideo")) {

    _0RL_cd_de358bdde5ac924d_81000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_91000000, "insertDownloadedVideo", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateDownloadedVideo")) {

    _0RL_cd_de358bdde5ac924d_a1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_b1000000, "updateDownloadedVideo", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getDownloadConfig")) {

    _0RL_cd_de358bdde5ac924d_c1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_d1000000, "getDownloadConfig", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getCustomVideo")) {

    _0RL_cd_de358bdde5ac924d_e1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_f1000000, "getCustomVideo", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "onRenderStartup")) {

    _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_02000000, "onRenderStartup", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getRenderConfig")) {

    _0RL_cd_de358bdde5ac924d_12000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_22000000, "getRenderConfig", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateRenderedVideo")) {

    _0RL_cd_de358bdde5ac924d_a1000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_32000000, "updateRenderedVideo", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "onUploadStartup")) {

    _0RL_cd_de358bdde5ac924d_a0000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_42000000, "onUploadStartup", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getUploadConfig")) {

    _0RL_cd_de358bdde5ac924d_52000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_62000000, "getUploadConfig", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "updateUploadedVideo")) {

    _0RL_cd_de358bdde5ac924d_72000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_82000000, "updateUploadedVideo", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getAuthenInfo")) {

    _0RL_cd_de358bdde5ac924d_92000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_a2000000, "getAuthenInfo", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if (omni::strMatch(op, "getClusterInfo")) {

    _0RL_cd_de358bdde5ac924d_b2000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_c2000000, "getClusterInfo", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_SpiderDefine*)this)->
      _impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
SpiderCorba::_impl_AgentSide::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::AgentSide::_PD_repoId)
    return (::SpiderCorba::_impl_AgentSide*) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::AgentSide::_PD_repoId))
    return (::SpiderCorba::_impl_AgentSide*) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_AgentSide::_mostDerivedRepoId()
{
  return ::SpiderCorba::AgentSide::_PD_repoId;
}

SpiderCorba::YoutubeAgent_ptr SpiderCorba::YoutubeAgent_Helper::_nil() {
  return ::SpiderCorba::YoutubeAgent::_nil();
}

::CORBA::Boolean SpiderCorba::YoutubeAgent_Helper::is_nil(::SpiderCorba::YoutubeAgent_ptr p) {
  return ::CORBA::is_nil(p);

}

void SpiderCorba::YoutubeAgent_Helper::release(::SpiderCorba::YoutubeAgent_ptr p) {
  ::CORBA::release(p);
}

void SpiderCorba::YoutubeAgent_Helper::marshalObjRef(::SpiderCorba::YoutubeAgent_ptr obj, cdrStream& s) {
  ::SpiderCorba::YoutubeAgent::_marshalObjRef(obj, s);
}

SpiderCorba::YoutubeAgent_ptr SpiderCorba::YoutubeAgent_Helper::unmarshalObjRef(cdrStream& s) {
  return ::SpiderCorba::YoutubeAgent::_unmarshalObjRef(s);
}

void SpiderCorba::YoutubeAgent_Helper::duplicate(::SpiderCorba::YoutubeAgent_ptr obj) {
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
}

SpiderCorba::YoutubeAgent_ptr
SpiderCorba::YoutubeAgent::_duplicate(::SpiderCorba::YoutubeAgent_ptr obj)
{
  if (obj && !obj->_NP_is_nil())  omni::duplicateObjRef(obj);
  return obj;
}

SpiderCorba::YoutubeAgent_ptr
SpiderCorba::YoutubeAgent::_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


SpiderCorba::YoutubeAgent_ptr
SpiderCorba::YoutubeAgent::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if (!obj || obj->_NP_is_nil() || obj->_NP_is_pseudo()) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

SpiderCorba::YoutubeAgent_ptr
SpiderCorba::YoutubeAgent::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_YoutubeAgent _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_YoutubeAgent* _the_nil_ptr = 0;
  if (!_the_nil_ptr) {
    omni::nilRefLock().lock();
    if (!_the_nil_ptr) {
      _the_nil_ptr = new _objref_YoutubeAgent;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* SpiderCorba::YoutubeAgent::_PD_repoId = "IDL:SpiderCorba/YoutubeAgent:1.0";


SpiderCorba::_objref_YoutubeAgent::~_objref_YoutubeAgent() {
  
}


SpiderCorba::_objref_YoutubeAgent::_objref_YoutubeAgent(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::SpiderCorba::YoutubeAgent::_PD_repoId, ior, id, 1),
   _objref_SpiderDefine(ior, id)
   
{
  _PR_setobj(this);
}

void*
SpiderCorba::_objref_YoutubeAgent::_ptrToObjRef(const char* id)
{
  if (id == ::SpiderCorba::YoutubeAgent::_PD_repoId)
    return (::SpiderCorba::YoutubeAgent_ptr) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (::CORBA::Object_ptr) this;

  if (omni::strMatch(id, ::SpiderCorba::YoutubeAgent::_PD_repoId))
    return (::SpiderCorba::YoutubeAgent_ptr) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::SpiderDefine_ptr) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (::CORBA::Object_ptr) this;

  return 0;
}


//
// Code for SpiderCorba::YoutubeAgent::getChannelInfo

// Proxy call descriptor class. Mangled signature:
//  void_i_cwstring_o_cwstring_o_clong_o_clong_o_clong_o_clong_o_clong
class _0RL_cd_de358bdde5ac924d_d2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_de358bdde5ac924d_d2000000(LocalCallFn lcfn, const char* op_, size_t oplen, _CORBA_Boolean upcall=0)
    : omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::WString_var arg_0_;
  const ::CORBA::WChar* arg_0;
  ::CORBA::WString_var arg_1;
  ::CORBA::Long arg_2;
  ::CORBA::Long arg_3;
  ::CORBA::Long arg_4;
  ::CORBA::Long arg_5;
  ::CORBA::Long arg_6;
};

void _0RL_cd_de358bdde5ac924d_d2000000::marshalArguments(cdrStream& _n)
{
  _n.marshalWString(arg_0,0);

}

void _0RL_cd_de358bdde5ac924d_d2000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalWString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_de358bdde5ac924d_d2000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalWString(arg_1,0);
  arg_2 >>= _n;
  arg_3 >>= _n;
  arg_4 >>= _n;
  arg_5 >>= _n;
  arg_6 >>= _n;

}

void _0RL_cd_de358bdde5ac924d_d2000000::unmarshalReturnedValues(cdrStream& _n)
{
  arg_1 = _n.unmarshalWString(0);
  (::CORBA::Long&)arg_2 <<= _n;
  (::CORBA::Long&)arg_3 <<= _n;
  (::CORBA::Long&)arg_4 <<= _n;
  (::CORBA::Long&)arg_5 <<= _n;
  (::CORBA::Long&)arg_6 <<= _n;

}

const char* const _0RL_cd_de358bdde5ac924d_d2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_de358bdde5ac924d_e2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_de358bdde5ac924d_d2000000* tcd = (_0RL_cd_de358bdde5ac924d_d2000000*)cd;
  SpiderCorba::_impl_YoutubeAgent* impl = (SpiderCorba::_impl_YoutubeAgent*) svnt->_ptrToInterface(SpiderCorba::YoutubeAgent::_PD_repoId);
  impl->getChannelInfo(tcd->arg_0, tcd->arg_1.out(), tcd->arg_2, tcd->arg_3, tcd->arg_4, tcd->arg_5, tcd->arg_6);


}

void SpiderCorba::_objref_YoutubeAgent::getChannelInfo(const ::CORBA::WChar* channelId, ::CORBA::WString_out channelName, ::CORBA::Long& videoNumber, ::CORBA::Long& viewNUmber, ::CORBA::Long& subcriber, ::CORBA::Long& dateCreated, ::CORBA::Long& status)
{
  _0RL_cd_de358bdde5ac924d_d2000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_e2000000, "getChannelInfo", 15);
  _call_desc.arg_0 = channelId;

  _invoke(_call_desc);
  channelName = _call_desc.arg_1._retn();
  videoNumber = _call_desc.arg_2;
  viewNUmber = _call_desc.arg_3;
  subcriber = _call_desc.arg_4;
  dateCreated = _call_desc.arg_5;
  status = _call_desc.arg_6;


}

SpiderCorba::_pof_YoutubeAgent::~_pof_YoutubeAgent() {}


omniObjRef*
SpiderCorba::_pof_YoutubeAgent::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::SpiderCorba::_objref_YoutubeAgent(ior, id);
}


::CORBA::Boolean
SpiderCorba::_pof_YoutubeAgent::is_a(const char* id) const
{
  if (omni::ptrStrMatch(id, ::SpiderCorba::YoutubeAgent::_PD_repoId))
    return 1;
  if (omni::ptrStrMatch(id, SpiderCorba::SpiderDefine::_PD_repoId))
    return 1;


  return 0;
}

const SpiderCorba::_pof_YoutubeAgent _the_pof_SpiderCorba_mYoutubeAgent;

SpiderCorba::_impl_YoutubeAgent::~_impl_YoutubeAgent() {}


::CORBA::Boolean
SpiderCorba::_impl_YoutubeAgent::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if (omni::strMatch(op, "getChannelInfo")) {

    _0RL_cd_de358bdde5ac924d_d2000000 _call_desc(_0RL_lcfn_de358bdde5ac924d_e2000000, "getChannelInfo", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if (_impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if (((_impl_SpiderDefine*)this)->
      _impl_SpiderDefine::_dispatch(_handle)) {
    return 1;
  }
#endif


  return 0;
}

void*
SpiderCorba::_impl_YoutubeAgent::_ptrToInterface(const char* id)
{
  if (id == ::SpiderCorba::YoutubeAgent::_PD_repoId)
    return (::SpiderCorba::_impl_YoutubeAgent*) this;
  if (id == ::SpiderCorba::SpiderDefine::_PD_repoId)
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (id == ::CORBA::Object::_PD_repoId)
    return (void*) 1;

  if (omni::strMatch(id, ::SpiderCorba::YoutubeAgent::_PD_repoId))
    return (::SpiderCorba::_impl_YoutubeAgent*) this;
  if (omni::strMatch(id, ::SpiderCorba::SpiderDefine::_PD_repoId))
    return (::SpiderCorba::_impl_SpiderDefine*) this;


  if (omni::strMatch(id, ::CORBA::Object::_PD_repoId))
    return (void*) 1;
  return 0;
}

const char*
SpiderCorba::_impl_YoutubeAgent::_mostDerivedRepoId()
{
  return ::SpiderCorba::YoutubeAgent::_PD_repoId;
}

POA_SpiderCorba::SpiderDefine::~SpiderDefine() {}

POA_SpiderCorba::SpiderBootSide::~SpiderBootSide() {}

POA_SpiderCorba::AgentSide::~AgentSide() {}

POA_SpiderCorba::YoutubeAgent::~YoutubeAgent() {}

